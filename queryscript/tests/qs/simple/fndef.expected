{
    "compile_errors": [
        (
            None,
            RuntimeError {
                source: CompileError {
                    source: CoercionError {
                        types: [
                            {
                            	id Int32,
                            	org_id Int32,
                            	name Utf8,
                            	active Boolean,
                            },
                            Int64,
                        ],
                        backtrace: None,
                        loc: Range(
                            "tests/qs/simple/fndef.qs",
                            Range {
                                start: Location {
                                    line: 23,
                                    column: 1,
                                },
                                end: Location {
                                    line: 23,
                                    column: 48,
                                },
                            },
                        ),
                    },
                },
                loc: Range(
                    "tests/qs/simple/fndef.qs",
                    Range {
                        start: Location {
                            line: 23,
                            column: 1,
                        },
                        end: Location {
                            line: 23,
                            column: 48,
                        },
                    },
                ),
            },
        ),
        (
            None,
            WrongType {
                lhs: {
                	foo ?field?,
                },
                rhs: {
                	id Int32,
                	org_id Int32,
                	name Utf8,
                	active Boolean,
                },
                backtrace: None,
            },
        ),
        (
            None,
            RuntimeError {
                source: CompileError {
                    source: CoercionError {
                        types: [
                            Float64,
                            Utf8,
                        ],
                        backtrace: None,
                        loc: Range(
                            "tests/qs/simple/fndef.qs",
                            Range {
                                start: Location {
                                    line: 39,
                                    column: 5,
                                },
                                end: Location {
                                    line: 39,
                                    column: 13,
                                },
                            },
                        ),
                    },
                },
                loc: Range(
                    "tests/qs/simple/fndef.qs",
                    Range {
                        start: Location {
                            line: 39,
                            column: 5,
                        },
                        end: Location {
                            line: 39,
                            column: 13,
                        },
                    },
                ),
            },
        ),
        (
            None,
            WrongType {
                lhs: {
                	foo ?field?,
                },
                rhs: {
                	id UInt64,
                	org_id UInt64,
                	name Utf8,
                	active Boolean,
                },
                backtrace: None,
            },
        ),
        (
            None,
            RuntimeError {
                source: CompileError {
                    source: CoercionError {
                        types: [
                            {
                            	id UInt64,
                            	org_id UInt64,
                            	name Utf8,
                            	active Boolean,
                            },
                            Int64,
                        ],
                        backtrace: None,
                        loc: Range(
                            "tests/qs/simple/fndef.qs",
                            Range {
                                start: Location {
                                    line: 24,
                                    column: 1,
                                },
                                end: Location {
                                    line: 24,
                                    column: 51,
                                },
                            },
                        ),
                    },
                },
                loc: Range(
                    "tests/qs/simple/fndef.qs",
                    Range {
                        start: Location {
                            line: 24,
                            column: 1,
                        },
                        end: Location {
                            line: 24,
                            column: 51,
                        },
                    },
                ),
            },
        ),
    ],
    "decls": {
        "let bar": ∀ "__Return", "R" λ {
        	a "R",
        } -> "__Return",
        "let baz": ∀ "__Return", "A", "B", "C" λ {
        	a "A",
        	b "B",
        	c "C",
        } -> "__Return",
        "let foo": ∀ "__Return", "R" λ {
        	a "R",
        } -> "__Return",
        "let identity": ∀ "R" λ {
        	u "R",
        } -> "R",
        "let rel_foo": ∀ "__Return", "R" λ {
        	a "R",
        } -> "__Return",
        "let rel_id": ∀ "__Return", "R" λ {
        	a "R",
        } -> "__Return",
    },
    "queries": [
        Ok(
            TypedValue {
                type_: Atom(
                    Int64,
                ),
                value: "1",
                viz: None,
            },
        ),
        Ok(
            TypedValue {
                type_: Atom(
                    Float64,
                ),
                value: "5.0",
                viz: None,
            },
        ),
        Err(
            StringError {
                what: "Unknown type cannot exist at runtime (?async_slot?)",
                backtrace: None,
            },
        ),
        Err(
            StringError {
                what: "Unknown type cannot exist at runtime (?async_slot?)",
                backtrace: None,
            },
        ),
        Err(
            StringError {
                what: "Unknown type cannot exist at runtime (?async_slot?)",
                backtrace: None,
            },
        ),
        Err(
            StringError {
                what: "Unknown type cannot exist at runtime (?async_slot?)",
                backtrace: None,
            },
        ),
        Ok(
            TypedValue {
                type_: List(
                    Record(
                        [
                            Field {
                                name: "id",
                                type_: Atom(
                                    Int32,
                                ),
                                nullable: true,
                            },
                            Field {
                                name: "org_id",
                                type_: Atom(
                                    Int32,
                                ),
                                nullable: true,
                            },
                            Field {
                                name: "name",
                                type_: Atom(
                                    Utf8,
                                ),
                                nullable: true,
                            },
                            Field {
                                name: "active",
                                type_: Atom(
                                    Boolean,
                                ),
                                nullable: true,
                            },
                        ],
                    ),
                ),
                value: "| id | org_id | name | active |\n|----|--------|------|--------|\n| 1  | 1      | Foo  | true   |\n| 2  | 1      | Bar  | false  |",
                viz: None,
            },
        ),
        Ok(
            TypedValue {
                type_: Atom(
                    Int64,
                ),
                value: "6",
                viz: None,
            },
        ),
        Ok(
            TypedValue {
                type_: Atom(
                    Float64,
                ),
                value: "6.5",
                viz: None,
            },
        ),
        Err(
            StringError {
                what: "Unknown type cannot exist at runtime (?__Return?)",
                backtrace: None,
            },
        ),
        Ok(
            TypedValue {
                type_: Atom(
                    Float64,
                ),
                value: "null",
                viz: None,
            },
        ),
        Ok(
            TypedValue {
                type_: Atom(
                    Float64,
                ),
                value: "null",
                viz: None,
            },
        ),
        Ok(
            TypedValue {
                type_: Atom(
                    Float64,
                ),
                value: "127.0",
                viz: None,
            },
        ),
    ],
}